(()=>{"use strict";function e(){const e=document.createElement("div");return e.classList.add("projectCreator"),e.innerHTML='\n        <div>\n            <input type="text" placeholder="Project name...">\n            <span class="projectErorrMsg"></span>\n        </div>\n        <div>\n            <button class="projectBtn cancelProjectBtn">Cancel</button>\n            <button class="projectBtn addProjectBtn">Add Project</button>\n        </div>\n    ',e}function t(){const e=document.querySelector("main#main");document.querySelector(".taskContainer"),e.classList.toggle("menuIsNotActive")}function n(e){const t=document.querySelector(".dropDown"),n=e.target.children[0];"none"==t.style.display?(t.style.display="block",n.classList.toggle("fa-caret-down"),n.classList.toggle("fa-caret-up")):(t.style.display="none",n.classList.toggle("fa-caret-down"),n.classList.toggle("fa-caret-up"))}function o(e){const t=document.querySelector("#modalBackground");t.appendChild(function(){const e=document.createElement("div");return e.classList.add("modal"),e.innerHTML='\n        <div class="taskCreationHeader modalHeader">\n            <div>New Task</div>\n            <i class="fa-solid fa-x"></i>\n        </div>\n        <form class="taskCreationForm">\n            <div class="taskDetails1">\n                <label for="taskTitle">Title:</label>\n                <input class="taskEntry" type="text" id="taskTitle" placeholder="e.g. Pay bills" spellcheck = "true">\n                <span class="errorMsg"></span>\n\n                <label for="taskDescription">Description:</label>\n                <textarea class="taskEntry" id="taskDescription" placeholder="e.g. internet, phone, rent, etc" spellcheck = "true"></textarea>\n\n            </div>\n            <div class="taskDetails2">\n                <label for="dueDate">Due Date:</label>\n                <input type="datetime-local" class="taskEntry" id="dueDate">\n\n                <label for="priority">Priority:</label>\n                <select id="priority" class="taskEntry">\n                    <option value="none" selected>None</option>\n                    <option value="low">Low</option>\n                    <option value="medium">Medium</option>\n                    <option value="high">High</option>\n                </select>\n\n                <label for="">Project:</label>\n                <select id="" class="taskEntry"></select>\n            </div>\n            <div class="taskCreationDecision">\n                <button type="button" class="cancelTaskBtn modalBtn cancelModalBtn">Cancel</button>\n                <button type="button" class="addTaskBtn modalBtn addModalBtn">Add task</button>\n            </div>\n\n        </form>\n\n    ',e}()),r(c,"click",document.querySelector(".fa-x"),document.querySelector(".cancelTaskBtn")),t.style.display="flex"}function c(e){const t=document.querySelector("#modalBackground"),n=document.querySelector(".modal"),o=document.querySelector(".cancelTaskBtn");l(c,"click",document.querySelector(".fa-x"),o),t.removeChild(n),t.style.display="none"}function s(t){e();const n=document.querySelector(".projects"),o=document.querySelector(".addProject");document.querySelector(".dropDown").appendChild(e()),document.querySelector(".addProjectBtn"),r(a,"click",document.querySelector(".cancelProjectBtn")),n.style.display="none",o.style.display="none"}function a(e){const t=document.querySelector(".projectCreator"),n=document.querySelector(".projects"),o=document.querySelector(".addProject"),c=document.querySelector(".dropDown");document.querySelector(".addProjectBtn"),l(a,"click",document.querySelector(".cancelProjectBtn")),c.removeChild(t),n.style.display="block",o.style.display="block"}function r(e,t,...n){n.forEach((n=>n.addEventListener(t,e)))}function l(e,t,...n){n.forEach((n=>n.removeEventListener(t,e)))}class i{constructor(e){this.title=e,this.tasks=[]}generateHTML(){}addTask(e){this.tasks.push(e)}removeTask(e){this.tasks.splice(e,1)}}class d{constructor(e,t,n,o,c){this.title=e,this.description=t,this.priority=n,this.dueDate=o,this.project=c,this.completion=!1}generateHTML(){}}class u{constructor(){this.projects=[]}get allTasks(){return this.projects.reduce(((e,t)=>e.concat(t.tasks)),[])}}function p(){const e=new u;e.projects.push(new i("Home"));const t=new d("exampleTask","testing please work","medium","12/12/12","Home");return e.projects[0].tasks.push(t),localStorage.masterObject=JSON.stringify(e),e}!function(){if("undefined"!=typeof Storage){if(localStorage.masterObject){const e=new u,t=JSON.parse(localStorage.masterObject);return e.projects=t.projects.map((e=>{const t=new i;return t.tasks=e.tasks.map((e=>Object.assign(new d,e))),Object.assign(t,e)})),localStorage.masterObject=JSON.stringify(e),e}return p()}p()}(),(()=>{const e=document.querySelector(".menuIcon"),c=document.querySelector(".projectsTitle"),a=document.querySelector(".addTask"),r=document.querySelector(".addProject");e.addEventListener("click",t),c.addEventListener("click",n),a.addEventListener("click",o),r.addEventListener("click",s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,